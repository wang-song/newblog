<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.blog.dao.SecretVoMapper">
  <resultMap id="BaseResultMap" type="com.song.blog.model.Vo.SecretVo">
    <id column="sid" jdbcType="INTEGER" property="sid" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="money" jdbcType="FLOAT" property="money" />
    <result column="use_time" jdbcType="INTEGER" property="useTime" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `sid`, `serial_number`, `money`, `use_time`, `user`, `description`
  </sql>
  <select id="selectByExample" parameterType="com.song.blog.model.Vo.SecretVoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `t_secret`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `t_secret`
    where `sid` = #{sid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `t_secret`
    where `sid` = #{sid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.song.blog.model.Vo.SecretVoExample">
    delete from `t_secret`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.song.blog.model.Vo.SecretVo">
    insert into `t_secret` (`sid`, `serial_number`, `money`, 
      `use_time`, `user`, `description`
      )
    values (#{sid,jdbcType=INTEGER}, #{serialNumber,jdbcType=VARCHAR}, #{money,jdbcType=FLOAT}, 
      #{useTime,jdbcType=INTEGER}, #{user,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.song.blog.model.Vo.SecretVo">
    insert into `t_secret`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        `sid`,
      </if>
      <if test="serialNumber != null">
        `serial_number`,
      </if>
      <if test="money != null">
        `money`,
      </if>
      <if test="useTime != null">
        `use_time`,
      </if>
      <if test="user != null">
        `user`,
      </if>
      <if test="description != null">
        `description`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=FLOAT},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.song.blog.model.Vo.SecretVoExample" resultType="java.lang.Long">
    select count(*) from `t_secret`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `t_secret`
    <set>
      <if test="record.sid != null">
        `sid` = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.serialNumber != null">
        `serial_number` = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        `money` = #{record.money,jdbcType=FLOAT},
      </if>
      <if test="record.useTime != null">
        `use_time` = #{record.useTime,jdbcType=INTEGER},
      </if>
      <if test="record.user != null">
        `user` = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        `description` = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `t_secret`
    set `sid` = #{record.sid,jdbcType=INTEGER},
      `serial_number` = #{record.serialNumber,jdbcType=VARCHAR},
      `money` = #{record.money,jdbcType=FLOAT},
      `use_time` = #{record.useTime,jdbcType=INTEGER},
      `user` = #{record.user,jdbcType=VARCHAR},
      `description` = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.blog.model.Vo.SecretVo">
    update `t_secret`
    <set>
      <if test="serialNumber != null">
        `serial_number` = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        `money` = #{money,jdbcType=FLOAT},
      </if>
      <if test="useTime != null">
        `use_time` = #{useTime,jdbcType=INTEGER},
      </if>
      <if test="user != null">
        `user` = #{user,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        `description` = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where `sid` = #{sid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.blog.model.Vo.SecretVo">
    update `t_secret`
    set `serial_number` = #{serialNumber,jdbcType=VARCHAR},
      `money` = #{money,jdbcType=FLOAT},
      `use_time` = #{useTime,jdbcType=INTEGER},
      `user` = #{user,jdbcType=VARCHAR},
      `description` = #{description,jdbcType=VARCHAR}
    where `sid` = #{sid,jdbcType=INTEGER}
  </update>
</mapper>